{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setTitle","authorId","setAuthorId","todoList","setTodoList","titleError","setTitleError","authorError","setAuthorError","Math","max","action","method","onSubmit","event","preventDefault","trim","newTodo","prevTodoList","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d5dbf0b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FunctionComponent } from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FunctionComponent<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: FunctionComponent<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: FunctionComponent<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          <TodoInfo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import './App.scss';\nimport React, { FunctionComponent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './react-app-env';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number) => {\n  const foundedUser = usersFromServer.find(user => user.id === userId);\n\n  return foundedUser || null;\n};\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.id),\n}));\n\nexport const App: FunctionComponent = () => {\n  const [title, setTitle] = useState('');\n  const [authorId, setAuthorId] = useState(0);\n  const [todoList, setTodoList] = useState(todosWithUser);\n  const [titleError, setTitleError] = useState(false);\n  const [authorError, setAuthorError] = useState(false);\n  const id = Math.max(...todoList.map(todo => todo.id));\n  const getNewTodoId = () => (\n    id + 1\n  );\n  const clearForm = () => {\n    setTitle('');\n    setAuthorId(0);\n    setTitleError(false);\n    setAuthorError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setTitleError(() => true);\n    }\n\n    if (authorId === 0) {\n      setAuthorError(() => true);\n    }\n\n    const newTodo: Todo = {\n      id: getNewTodoId(),\n      title,\n      completed: false,\n      userId: authorId,\n      user: getUserById(authorId),\n    };\n\n    if (title && authorId) {\n      setTodoList((prevTodoList) => [\n        ...prevTodoList,\n        newTodo,\n      ]);\n\n      clearForm();\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (titleError) {\n      setTitleError(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (authorError) {\n      setAuthorError(false);\n    }\n\n    setAuthorId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"#titleInput\">\n            Title:\n          </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"#userSelect\">\n            User:\n          </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={authorId}\n            onChange={handleSelect}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {authorError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}